/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-22 03:44:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/seven_factory/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sevenFactory/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1661140456700L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	\n");
      out.write("/* 	.main{\n");
      out.write("		background-image: url(resources/main.jpg);\n");
      out.write("		height: 800px;	\n");
      out.write("	} */\n");
      out.write("	\n");
      out.write("   #myVideo {\n");
      out.write("     position: fixed;\n");
      out.write("     right: 0;\n");
      out.write("      bottom: 0;\n");
      out.write("     min-width: 100%;\n");
      out.write("     min-height: 100%;\n");
      out.write("   }\n");
      out.write("	\n");
      out.write("	.reservation-box {\n");
      out.write("	    position: fixed;\n");
      out.write("    	display: inline-block;\n");
      out.write("	    /* margin: 300px 400px; */\n");
      out.write("	    border: 1px solid black;\n");
      out.write("	    padding: 5px;\n");
      out.write("	    background:black;\n");
      out.write("	    top: 35%;\n");
      out.write("	    left: 25%;\n");
      out.write("	    width: 50%;\n");
      out.write("	}\n");
      out.write("	.reservation-box-form{\n");
      out.write("		background : white;\n");
      out.write("		width : 100%;\n");
      out.write("		margin : 0;\n");
      out.write("		display: flex;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("   .footer-wrap {\n");
      out.write("      position: fixed;\n");
      out.write("      bottom: 0;\n");
      out.write("   }\n");
      out.write("   #reservation-box-checkIn-div{\n");
      out.write("   	width: 40%;\n");
      out.write("   }\n");
      out.write("   #reservation-box-checkOut-div{\n");
      out.write("   	width: 40%;\n");
      out.write("   }\n");
      out.write("   #reservation-box-selectBtn-div{\n");
      out.write("   	width: 20%; text-align: center;\n");
      out.write("   }\n");
      out.write("   \n");
      out.write("	#reservation-box-checkIn{\n");
      out.write("		width : 100%;\n");
      out.write("		border : none;\n");
      out.write("		text-align: center;\n");
      out.write("    	font-size: 16px;\n");
      out.write("	}\n");
      out.write("   #reservation-box-checkOut{\n");
      out.write("	  	width : 100%;\n");
      out.write("	  	border : none;\n");
      out.write("	   	text-align: center;\n");
      out.write("  	    font-size: 16px;\n");
      out.write("   }\n");
      out.write("	#reservation-box-checkIn:focus{\n");
      out.write("		outline : none;\n");
      out.write("	}\n");
      out.write("   #reservation-box-checkOut:focus{\n");
      out.write("	   	outline : none;\n");
      out.write("   }\n");
      out.write("   #reservation-box-selectBtn{\n");
      out.write(" 		border : none;\n");
      out.write(" 		margin : auto;\n");
      out.write(" 		width:  100%;\n");
      out.write(" 		height: 100%;\n");
      out.write(" 		background: black;\n");
      out.write(" 		color : white;\n");
      out.write("   }\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("<script>\n");
      out.write("	\n");
      out.write("	var today = new Date();\n");
      out.write("  function fn_selectReservation(f){\n");
      out.write("	  \n");
      out.write("	  \n");
      out.write("	  \n");
      out.write("	  if (f.rCheckIn.value =='' ||  f.rCheckOut.value == ''){\n");
      out.write("		  alert('체크인 날짜와 체크아웃 날짜를 선택해 주세요.');\n");
      out.write("		  f.rCheckIn.focus();\n");
      out.write("	  }else if (f.rCheckIn.value > f.rCheckOut.value ){\n");
      out.write("		  alert('체크인 날짜보다 체크아웃 날짜가 빠를 수 없습니다.');\n");
      out.write("		  f.rCheckOut.focus();\n");
      out.write("	  }else if(new Date(f.rCheckIn.value) < today ){\n");
      out.write("		  alert('지날 날짜와 당일 예약은 불가능합니다.');\n");
      out.write("		  f.rCheckIn.focus();\n");
      out.write("		  \n");
      out.write("	  }else if(f.rCheckIn.value == f.rCheckOut.value){ \n");
      out.write("		  alert('체크인 날짜와 체크아웃 날짜가 같을 수 없습니다.');\n");
      out.write("		  f.rCheckOut.focus();\n");
      out.write("	  }else{\n");
      out.write("		  f.action=\"selectBookable\";\n");
      out.write("		  f.submit();\n");
      out.write("	  }\n");
      out.write("	  \n");
      out.write("  }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<!-- 동적인 페이지 포함 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/template/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<video autoplay muted loop id=\"myVideo\">\n");
      out.write("  <source src=\"resources/Sea.mp4\" type=\"video/mp4\">\n");
      out.write("</video>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("	<div class=\"reservation-box\">\n");
      out.write("		<form class=\"reservation-box-form\">\n");
      out.write("			<div id = \"reservation-box-checkIn-div\">\n");
      out.write("			체크인<br/>\n");
      out.write("			<input id=\"reservation-box-checkIn\" type=\"date\" name=\"rCheckIn\" />\n");
      out.write("			</div>\n");
      out.write("			<div id = \"reservation-box-checkOut-div\">\n");
      out.write("			체크아웃<br/>\n");
      out.write("			<input id=\"reservation-box-checkOut\"type=\"date\" name=\"rCheckOut\"/>\n");
      out.write("			</div>\n");
      out.write("			<div id = \"reservation-box-selectBtn-div\">\n");
      out.write("			<input id=\"reservation-box-selectBtn\" type=\"button\" value=\"객실검색\" onclick=\"fn_selectReservation(this.form)\">\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<!-- 정적인 페이지 포함 -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
